[{"path":"/articles/idopNetwork_vignette.html","id":"about","dir":"Articles","previous_headings":"","what":"About","title":"idopNetwork_vignette","text":"idopNetwork packed cartographic tool performs power curve fitting, classification, variable selection, microbial abundance decomposition, network visualization based microbial 16S rRNA gene sequencing metadata. complete details use execution protocol, please refer Chen et al Cao et al.","code":""},{"path":"/articles/idopNetwork_vignette.html","id":"input-data","dir":"Articles","previous_headings":"","what":"1. Input data","title":"idopNetwork_vignette","text":"running idopNetwork, user need provide datasets, cleaned merged exactly format example data.","code":""},{"path":"/articles/idopNetwork_vignette.html","id":"gut-microbe-otus-data","dir":"Articles","previous_headings":"1. Input data","what":"1.1 gut microbe OTUs data","title":"idopNetwork_vignette","text":"Microbe Operational taxonomic unit dataset must first column IDs microbes.","code":"data(\"gut_microbe\") View(gut_microbe)"},{"path":"/articles/idopNetwork_vignette.html","id":"mustard-microbe-otus-data","dir":"Articles","previous_headings":"1. Input data","what":"1.2 mustard microbe OTUs data","title":"idopNetwork_vignette","text":"","code":"data(\"mustard_microbe\") View(mustard_microbe)"},{"path":"/articles/idopNetwork_vignette.html","id":"power-curve-fitting","dir":"Articles","previous_headings":"","what":"2. power curve fitting","title":"idopNetwork_vignette","text":"first major step idopNetwork reconstruction fit allometric growth curves data using power function. easily done using related function power_fit. function needs cleaned dataset input return fitted OTUs given dataset. fitted output original dataset can transfer function power_equation_plot quick visualization","code":"df = data_cleaning(gut_microbe) result1 = power_equation_fit(df) power_equation_plot(result1)"},{"path":"/articles/idopNetwork_vignette.html","id":"functional-clustering","dir":"Articles","previous_headings":"","what":"3. Functional clustering","title":"idopNetwork_vignette","text":"step implement power equation functional clustering detect different microbial modules. clustering still many microbes within certain module network reconstruction, can rerun functional clustering classify module distinct submodules.","code":""},{"path":"/articles/idopNetwork_vignette.html","id":"mean-curve","dir":"Articles","previous_headings":"3. Functional clustering","what":"3.1 mean curve","title":"idopNetwork_vignette","text":"fit mean vector cluster center power equation(assume k=3)","code":"matplot(t(power_equation(x = 1:30, matrix(c(2,1,3,0.2,0.5,-0.5),nrow = 3, ncol = 2))),          type = \"l\",         xlab = \"time\",          ylab = \"population\") legend(\"topright\",         c(\"cluster 1\", \"cluster 2\", \"cluster 3\"),         lty = c(1,2,3),         col = c(1,2,3),         box.lwd = 0)"},{"path":"/articles/idopNetwork_vignette.html","id":"covariance-matrix","dir":"Articles","previous_headings":"3. Functional clustering","what":"3.2 covariance matrix","title":"idopNetwork_vignette","text":"fit covariance matrix multivariate normal distribution SAD1, can showed ","code":"get_SAD1_covmatrix(c(2,0.5), n = 5) #>      [,1]  [,2]  [,3]  [,4]  [,5] #> [1,] 0.25  0.50  1.00  2.00  4.00 #> [2,] 0.50  1.25  2.50  5.00 10.00 #> [3,] 1.00  2.50  5.25 10.50 21.00 #> [4,] 2.00  5.00 10.50 21.25 42.50 #> [5,] 4.00 10.00 21.00 42.50 85.25"},{"path":"/articles/idopNetwork_vignette.html","id":"initial-parameters","dir":"Articles","previous_headings":"3. Functional clustering","what":"3.3 initial parameters","title":"idopNetwork_vignette","text":"can check initial parameters (k=4)","code":"get_par_int(X = log10(df+1), k = 4, times = as.numeric(log10(colSums(df)+1))) #> Error in nls(y ~ a * x^b, start = list(a = a, b = b), control = nls.control(maxiter = 1000,  :  #>   number of iterations exceeded maximum of 1000 #> Error in nls(y ~ a * x^b, start = list(a = a, b = b), control = nls.control(maxiter = 1000,  :  #>   number of iterations exceeded maximum of 1000 #> $initial_cov_params #> [1] 0.50000 1.09618 #>  #> $initial_mu_params #>                 a          b #> [1,] 6.856174e+02  -3.235497 #> [2,] 4.378423e+07 -11.252193 #> [3,] 1.085234e+09 -12.807990 #> [4,] 7.206028e-41  58.213660 #>  #> $initial_probibality #>  #>          1          2          3          4  #> 0.03278689 0.36065574 0.26229508 0.34426230  #use kmeans to get initial centers tmp = kmeans(log10(df+1),4)$centers tmp2 = power_equation_fit(tmp, trans = NULL) power_equation_plot(tmp2, label = NULL,n = 4)"},{"path":"/articles/idopNetwork_vignette.html","id":"functional-clustering-power-equationsad1","dir":"Articles","previous_headings":"3. Functional clustering","what":"3.4 functional clustering (power-equation,SAD1)","title":"idopNetwork_vignette","text":"idopNetowrk already wrapped mean curve modelling, covariance matrix modelling likelihood ratio calculation function fun_clu(). Usually use multithread calcuation k = 2-n decide best k , fun_clu_BIC uses BIC select best cluster number default.","code":"options(max.print = 10) fun_clu(result1$original_data, k = 3, iter.max = 5) #> Error in nls(y ~ a * x^b, start = list(a = a, b = b), control = nls.control(maxiter = 1000,  :  #>   number of iterations exceeded maximum of 1000 #> Error in nls(y ~ a * x^b, start = list(a = a, b = b), control = nls.control(maxiter = 1000,  :  #>   number of iterations exceeded maximum of 1000 #> initial  value 1225.809009  #> iter  10 value 1131.213293 #> final  value 1125.868090  #> converged #>  #>  iter = 1  #>  Log-Likelihood =  1125.868  #> initial  value 1118.632899  #> iter  10 value 1115.215803 #> iter  10 value 1115.215803 #> iter  10 value 1115.215803 #> final  value 1115.215803  #> converged #>  #>  iter = 2  #>  Log-Likelihood =  1115.216  #> initial  value 1113.154279  #> final  value 1112.161474  #> converged #>  #>  iter = 3  #>  Log-Likelihood =  1112.161  #> initial  value 1111.441667  #> final  value 1111.183066  #> converged #>  #>  iter = 4  #>  Log-Likelihood =  1111.183  #> initial  value 1110.923563  #> final  value 1110.833857  #> converged #>  #>  iter = 5  #>  Log-Likelihood =  1110.834  #> initial  value 1110.730885  #> final  value 1110.694607  #> converged #>  #>  iter = 6  #>  Log-Likelihood =  1110.695 #> $cluster_number #> [1] 3 #>  #> $Log_likelihodd #> [1] 1110.695 #>  #> $AIC #> [1] 2241.389 #>  #> $BIC #> [1] 2260.101 #>  #> $cov_par #> [1] 0.3550810 0.7415481 #>  #> $mu_par #>              [,1]       [,2] #> [1,] 1.595896e+13 -19.044474 #> [2,] 4.803194e+01  -1.683865 #> [3,] 4.142917e-26  36.857815 #>  #> $probibality #> [1] 0.46813133 0.08309011 0.44877856 #>  #> $omega #>               [,1]         [,2]         [,3] #>  [1,] 9.998988e-01 3.154768e-10 1.011961e-04 #>  [2,] 9.978411e-01 1.159312e-10 2.158880e-03 #>  [3,] 9.398918e-01 9.560049e-18 6.010819e-02 #>  [ reached getOption(\"max.print\") -- omitted 45 rows ] #>  #> $cluster #>      MC_UC3 MC_UC4 YZJC_UC3 GQ_UC3 ZC_UC3 MC_UC2 GQ_UC1 GQ_UC4 HJC_UC3 ZC_UC4 #>      HJC_UC1 HJC_UC4 HC_UC2 ZC_UC1 HC_UC4 JJC_UC2 HJC_UC2 MC_UC1 GQ_UC5 ZC_UC5 #>      apply(omega, 1, which.max) #>  [ reached 'max' / getOption(\"max.print\") -- omitted 48 rows ] #>  #> $cluster2 #>      MC_UC3 MC_UC4 YZJC_UC3 GQ_UC3 ZC_UC3 MC_UC2 GQ_UC1 GQ_UC4 HJC_UC3 ZC_UC4 #>      HJC_UC1 HJC_UC4 HC_UC2 ZC_UC1 HC_UC4 JJC_UC2 HJC_UC2 MC_UC1 GQ_UC5 ZC_UC5 #>      apply(omega, 1, which.max) #>  [ reached 'max' / getOption(\"max.print\") -- omitted 48 rows ] #>  #>  [ reached getOption(\"max.print\") -- omitted 2 entries ] result2 = fun_clu_parallel(result1$original_data, start = 2, end = 5) best.k = which.min(sapply( result2 , \"[[\" , 'BIC' )) + 1 #skipped k = 1 best.k #> [1] 7  fun_clu_BIC(result = result2) #we can direct give other k value fun_clu_plot(result = result2, best.k = best.k)"},{"path":"/articles/idopNetwork_vignette.html","id":"bi-functional-clustering-power-equationbisad1","dir":"Articles","previous_headings":"3. Functional clustering","what":"3.5 bi-functional clustering (power-equation,biSAD1)","title":"idopNetwork_vignette","text":"part select part mustard data demonstration purpose.","code":"data(\"mustard_microbe\") df2 = data_cleaning(mustard_microbe, x = 160) res_l = power_equation_fit(df2[,1:5] res_r = power_equation_fit(df2[,89:95]) res1 = data_match(result1 = res_l, result2 = res_r) res2 = bifun_clu_parallel(data1 = res1$dataset1$original_data,                            data2 = res1$dataset2$original_data,                           Time1 = res1$dataset1$Time,                            Time2 = res1$dataset2$Time,                           start = 2,                            end = 10,                            thread = 9,                           iter.max = 10) res2 = bifun_clu_parallel(data1 = res1$dataset1$original_data,                            data2 = res1$dataset2$original_data,                           Time1 = res1$dataset1$Time,                            Time2 = res1$dataset2$Time,                           start = 2,                            end = 10,                            thread = 9,                           iter.max = 10) fun_clu_BIC(result = res2) #we can set best.k directly bifun_clu_plot(result = res2, best.k = 3, color1 = \"#C060A1\", color2 = \"#59C1BD\")"},{"path":"/articles/idopNetwork_vignette.html","id":"sub-clustering","dir":"Articles","previous_headings":"3. Functional clustering","what":"3.6 sub-clustering","title":"idopNetwork_vignette","text":"Sometimes module still large network reconstruction, determined Dunbar’s number, can cluster sub-modules.","code":"res3 = bifun_clu_convert(res2, best.k = 3) large.module = order(sapply(res3$a$Module.all,nrow))[5]  res_suba = fun_clu_select(result_fit = res1$dataset1, result_funclu = res3$a, i = large.module) res_subb = fun_clu_select(result_fit = res1$dataset2, result_funclu = res3$b, i = large.module) dfsuba_l = power_equation_fit(res_suba$original_data) dfsubb_r = power_equation_fit(res_subb$original_data) ressub1 = data_match(result1 = dfsuba_l, result2 = dfsubb_r) ressub2 = bifun_clu_parallel(data1 = ressub1$dataset1$original_data,                               data2 = ressub1$dataset2$original_data,                              Time1 = ressub1$dataset1$Time,                               Time2 = ressub1$dataset2$Time,                               start = 2,                               end = 5,                               iter.max = 3) ressub2 = test_result$d2_subcluster fun_clu_BIC(result = ressub2) bifun_clu_plot(result = ressub2, best.k = 2, color1 = \"#C060A1\", color2 = \"#59C1BD\", degree = 1)"},{"path":"/articles/idopNetwork_vignette.html","id":"lasso-based-variable-selection","dir":"Articles","previous_headings":"","what":"4. LASSO-based variable selection","title":"idopNetwork_vignette","text":"idopNetwork implements LASSO-based procedure choose small set significant microbes/module links given microbes/modules. get_interaction()return compound list contain target microbe/module name, relevant Modules/microbes names coefficients.","code":""},{"path":"/articles/idopNetwork_vignette.html","id":"for-modules","dir":"Articles","previous_headings":"4. LASSO-based variable selection","what":"4.1 For Modules","title":"idopNetwork_vignette","text":"","code":"result3 = fun_clu_convert(result2,best.k = best.k) df.module = result3$original_data get_interaction(df.module,1) #> $ind.name #> [1] \"M1\" #>  #> $dep.name #> [1] \"M5\" #>  #> $coefficient #> [1] 6.01101"},{"path":"/articles/idopNetwork_vignette.html","id":"for-microbes","dir":"Articles","previous_headings":"4. LASSO-based variable selection","what":"4.2 For Microbes","title":"idopNetwork_vignette","text":"","code":"#we can the microbial relationship in Module1 df.M1 = result3$Module.all$`1` get_interaction(df.M1,1) #> Warning: Option grouped=FALSE enforced in cv.glmnet, since < 3 observations per #> fold  #> Warning: Option grouped=FALSE enforced in cv.glmnet, since < 3 observations per #> fold  #> Warning: Option grouped=FALSE enforced in cv.glmnet, since < 3 observations per #> fold #> $ind.name #> [1] \"Arthrobacter_oxydans\" #>  #> $dep.name #> [1] \"Fusobacterium_necrophorum\" #>  #> $coefficient #> [1] 0.08263525"},{"path":"/articles/idopNetwork_vignette.html","id":"qdode-solving","dir":"Articles","previous_headings":"","what":"5 qdODE solving","title":"idopNetwork_vignette","text":"qdODE system build based variable selection results, unique ability decompose observed module/microbe abundance level independent component dependent component, can used inferring idopNetwork.","code":""},{"path":"/articles/idopNetwork_vignette.html","id":"solving-qdode-between-modules","dir":"Articles","previous_headings":"5 qdODE solving","what":"5.1 solving qdODE between modules","title":"idopNetwork_vignette","text":"","code":"options(max.print = 10) # first we test solving a qdODE module.relationship = lapply(1:best.k, function(c)get_interaction(df.module,c)) ode.test = qdODE_all(result = result3, relationship = module.relationship, 1, maxit = 100) #> iter   10 value 0.004336 #> final  value 0.000002  #> converged # we can view the result qdODE_plot_base(ode.test) # then we solve all qdODEs ode.module = qdODE_parallel(result3) qdODE_plot_all(ode.module)"},{"path":"/articles/idopNetwork_vignette.html","id":"solving-qdode-within-a-module","dir":"Articles","previous_headings":"5 qdODE solving","what":"5.2 solving qdODE within a module","title":"idopNetwork_vignette","text":"","code":"result_m1 = fun_clu_select(result_fit = result1, result_funclu = result3, i = 1) ode.M1 = qdODE_parallel(result_m1) qdODE_plot_all(ode.M1)"},{"path":"/articles/idopNetwork_vignette.html","id":"idopnetwork-reconstruction","dir":"Articles","previous_headings":"","what":"6 idopNetwork reconstruction","title":"idopNetwork_vignette","text":"final step guide visualization multilayer network, package provide network_plot function easily draw idopNetwork. can simply plug previous qdODE results network_conversion function, convert qdODE result network visualization","code":""},{"path":"/articles/idopNetwork_vignette.html","id":"network-between-modules","dir":"Articles","previous_headings":"6 idopNetwork reconstruction","what":"6.1 network between modules","title":"idopNetwork_vignette","text":"","code":"net_module = lapply(ode.module$ode_result, network_conversion) network_plot(net_module, title = \"Module Network\")"},{"path":"/articles/idopNetwork_vignette.html","id":"network-within-a-module","dir":"Articles","previous_headings":"6 idopNetwork reconstruction","what":"6.2 network within a module","title":"idopNetwork_vignette","text":"","code":"net_m1 = lapply(ode.M1$ode_result, network_conversion) network_plot(net_m1, title = \"M1 Network\")"},{"path":"/articles/idopNetwork_vignette.html","id":"network-comparison","dir":"Articles","previous_headings":"6 idopNetwork reconstruction","what":"6.3 network comparison","title":"idopNetwork_vignette","text":"","code":"mustard_module_a = qdODE_parallel(res3$a)  mustard_module_b = qdODE_parallel(res3$b)   res_m1a = fun_clu_select(result_fit = res1$dataset1, result_funclu = res3$a, i = 3) res_m1b = fun_clu_select(result_fit = res1$dataset2, result_funclu = res3$b, i = 3) mustard_M1a = qdODE_parallel(res_m1a) mustard_M1b = qdODE_parallel(res_m1b) mustard_m_a <- lapply(mustard_module_a$ode_result, network_conversion) mustard_m_b <- lapply(mustard_module_b$ode_result, network_conversion)  #set seed to make same random layout layout(matrix(c(1,2),1,2,byrow=TRUE)) set.seed(1) network_plot(mustard_m_a, title = \"Module Network a\") set.seed(1) network_plot(mustard_m_b, title = \"Module Network b\")"},{"path":"/articles/idopNetwork_vignette.html","id":"section","dir":"Articles","previous_headings":"","what":"idopNetwork_vignette","title":"idopNetwork_vignette","text":"","code":"result_m1a = fun_clu_select(result_fit = res1$dataset1, result_funclu = res3$a, i = 1) result_m1b = fun_clu_select(result_fit = res1$dataset2, result_funclu = res3$b, i = 1) ode.m1a = qdODE_parallel(result_m1a, thread = 16) ode.m1b = qdODE_parallel(result_m1b, thread = 16) net_m1a = lapply(ode.m1a$ode_result, network_conversion) net_m1b = lapply(ode.m1b$ode_result, network_conversion)  #set seed to make same random layout layout(matrix(c(1,2),1,2,byrow=TRUE)) set.seed(1) network_plot(net_m1a, title = \"Module1 a\") set.seed(1) network_plot(net_m1b, title = \"Module1 b\")"},{"path":"/articles/idopNetwork_vignette.html","id":"troubleshooting","dir":"Articles","previous_headings":"","what":"Troubleshooting","title":"idopNetwork_vignette","text":"object “LL.next” found happens parameters optimization failure, try rerun cluster. plot failure using fun_clu_plot() bifun_clu_plot() often happens bad initial parameters given cluster lost, try rerun cluster use smaller k.","code":""},{"path":"/articles/idopNetwork_vignette.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"idopNetwork_vignette","text":"","code":"sessionInfo() #> R version 4.3.0 (2023-04-21) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] idopNetwork_0.1.2 #>  #> loaded via a namespace (and not attached): #>  [1] sass_0.4.6           utf8_1.2.3           shape_1.4.6          #>  [4] stringi_1.7.12       lattice_0.21-8       digest_0.6.31        #>  [7] magrittr_2.0.3       evaluate_0.21        grid_4.3.0           #> [10] iterators_1.0.14     mvtnorm_1.2-1        fastmap_1.1.1        #> [13] plyr_1.8.8           foreach_1.5.2        rprojroot_2.0.3      #> [16] jsonlite_1.8.5       glmnet_4.1-7         Matrix_1.5-4         #> [19] deSolve_1.35         survival_3.5-5       purrr_1.0.1          #> [22] fansi_1.0.4          scales_1.2.1         codetools_0.2-19     #> [25] textshaping_0.3.6    jquerylib_0.1.4      cli_3.6.1            #> [28] rlang_1.1.1          munsell_0.5.0        splines_4.3.0        #> [31] withr_2.5.0          cachem_1.0.8         yaml_2.3.7           #> [34] tools_4.3.0          parallel_4.3.0       reshape2_1.4.4       #> [37] polynom_1.4-1        memoise_2.0.1        colorspace_2.1-0     #> [40] ggplot2_3.4.2        orthopolynom_1.0-6.1 vctrs_0.6.2          #> [43] R6_2.5.1             lifecycle_1.0.3      stringr_1.5.0        #> [46] fs_1.6.2             ragg_1.2.5           pkgconfig_2.0.3      #> [49] desc_1.4.2           pkgdown_2.0.7        pillar_1.9.0         #> [52] bslib_0.4.2          gtable_0.3.3         glue_1.6.2           #> [55] Rcpp_1.0.10          systemfonts_1.0.4    highr_0.10           #> [58] xfun_0.39            tibble_3.2.1         knitr_1.43           #> [61] farver_2.1.1         patchwork_1.1.2      htmltools_0.5.5      #> [64] igraph_1.4.3         labeling_0.4.2       rmarkdown_2.22       #> [67] compiler_4.3.0"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ang Dong. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dong (2023). idopNetwork: Network Tool Dissect Spatial Community Ecology. R package version 0.1.2, https://github.com/cxzdsa2332/idopNetwork.","code":"@Manual{,   title = {idopNetwork: A Network Tool to Dissect Spatial Community Ecology},   author = {Ang Dong},   year = {2023},   note = {R package version 0.1.2},   url = {https://github.com/cxzdsa2332/idopNetwork}, }"},{"path":"/index.html","id":"idopnetwork","dir":"","previous_headings":"","what":"A Network Tool to Dissect Spatial Community Ecology","title":"A Network Tool to Dissect Spatial Community Ecology","text":"existing approaches network reconstruction can infer overall network , also, fail capture complete set network properties. address issues, new model developed, converts static data ‘dynamic’ form. ‘idopNetwork’ can inferring informative, dynamic, omnidirectional personalized networks.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Network Tool to Dissect Spatial Community Ecology","text":"can install development version idopNetwork GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"cxzdsa2332/idopNetwork\")"},{"path":"/index.html","id":"vignette","dir":"","previous_headings":"","what":"Vignette","title":"A Network Tool to Dissect Spatial Community Ecology","text":"demonstrate use idopNetwork package analysis gut microbiota mustard microbiota data.(https://cxzdsa2332.github.io/idopNetwork/articles/idopNetwork_vignette.html)","code":""},{"path":"/reference/Q_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Q-function to replace log-likelihood function — Q_function","title":"Q-function to replace log-likelihood function — Q_function","text":"Q-function replace log-likelihood function","code":""},{"path":"/reference/Q_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Q-function to replace log-likelihood function — Q_function","text":"","code":"Q_function(par, prob_log, omega_log, X, k, times)"},{"path":"/reference/Q_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Q-function to replace log-likelihood function — Q_function","text":"par numeric vector parameters need estimated prob_log mixture component weights(log) omega_log latent variables(log) X matrix cluster k vector cluster number times vector x values time points","code":""},{"path":"/reference/Q_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Q-function to replace log-likelihood function — Q_function","text":"Loglikelihood value","code":""},{"path":"/reference/biQ_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Q-function to replace log-likelihood function — biQ_function","title":"Q-function to replace log-likelihood function — biQ_function","text":"Q-function replace log-likelihood function","code":""},{"path":"/reference/biQ_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Q-function to replace log-likelihood function — biQ_function","text":"","code":"biQ_function(par, prob_log, omega_log, X, k, n1, n2, times1, times2)"},{"path":"/reference/biQ_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Q-function to replace log-likelihood function — biQ_function","text":"par numeric vector parameters need estimated prob_log mixture component weights(log) omega_log latent variables(log) X matrix cluster k vector cluster number n1 scalar number column contain first trait/location etc n2 scalar number column contain second trait/location etc times1 vector x values time points times2 vector x values time points","code":""},{"path":"/reference/biQ_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Q-function to replace log-likelihood function — biQ_function","text":"Loglikelihood value","code":""},{"path":"/reference/bifun_clu.html","id":null,"dir":"Reference","previous_headings":"","what":"main function for bifunctional clustering — bifun_clu","title":"main function for bifunctional clustering — bifun_clu","text":"main function bifunctional clustering","code":""},{"path":"/reference/bifun_clu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"main function for bifunctional clustering — bifun_clu","text":"","code":"bifun_clu(   data1,   data2,   k,   Time1 = NULL,   Time2 = NULL,   trans = log10,   inv.cov = NULL,   initial.pars = NULL,   iter.max = 100,   parscale = 0.001 )"},{"path":"/reference/bifun_clu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"main function for bifunctional clustering — bifun_clu","text":"data1 matrix data cluster data2 matrix data cluster k vector cluster number Time1 vector time point Time2 vector time point trans indicate log/log2/log10 transform dataset inv.cov matrix directly solve cov matrix, default given(currently available) initial.pars vector manual give initial parameters, default given iter.max scales control iteration EM algorithm parscale scales control parameters scales cov pars","code":""},{"path":"/reference/bifun_clu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"main function for bifunctional clustering — bifun_clu","text":"initial parameters functional clustering","code":""},{"path":"/reference/bifun_clu_convert.html","id":null,"dir":"Reference","previous_headings":"","what":"convert result of bifunctional clustering result — bifun_clu_convert","title":"convert result of bifunctional clustering result — bifun_clu_convert","text":"convert result bifunctional clustering result","code":""},{"path":"/reference/bifun_clu_convert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert result of bifunctional clustering result — bifun_clu_convert","text":"","code":"bifun_clu_convert(result, best.k)"},{"path":"/reference/bifun_clu_convert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert result of bifunctional clustering result — bifun_clu_convert","text":"result list directly bifun_clu_parallel function best.k scale BIC-determined cluster number","code":""},{"path":"/reference/bifun_clu_convert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert result of bifunctional clustering result — bifun_clu_convert","text":"list contain module data fitted data","code":""},{"path":"/reference/bifun_clu_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"parallel version for functional clustering — bifun_clu_parallel","title":"parallel version for functional clustering — bifun_clu_parallel","text":"parallel version functional clustering","code":""},{"path":"/reference/bifun_clu_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parallel version for functional clustering — bifun_clu_parallel","text":"","code":"bifun_clu_parallel(   data1,   data2,   Time1 = NULL,   Time2 = NULL,   trans = log10,   start,   end,   iter.max = 100,   thread = 2 )"},{"path":"/reference/bifun_clu_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parallel version for functional clustering — bifun_clu_parallel","text":"data1 data cluster data2 data cluster Time1 vector time point Time2 vector time point trans indicate log/log2/log10 transform dataset start vector minimum cluster number end vector maximum cluster number iter.max scales control iteration EM algorithm thread scales many thread used","code":""},{"path":"/reference/bifun_clu_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parallel version for functional clustering — bifun_clu_parallel","text":"initial parameters functional clustering","code":""},{"path":"/reference/bifun_clu_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"bifunctional clustering plot — bifun_clu_plot","title":"bifunctional clustering plot — bifun_clu_plot","text":"bifunctional clustering plot","code":""},{"path":"/reference/bifun_clu_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bifunctional clustering plot — bifun_clu_plot","text":"","code":"bifun_clu_plot(   result,   best.k,   label = 10,   degree = 1/4,   show.legend = FALSE,   color1 = \"#38E54D\",   color2 = \"#FF8787\" )"},{"path":"/reference/bifun_clu_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"bifunctional clustering plot — bifun_clu_plot","text":"result list directly bifun_clu_parallel function best.k scale BIC-determined cluster number label relabel x y label due log-transform, set 10 default degree scalar control transparency degree show.legend show legend color1 Hex Color Codes first data color2 Hex Color Codes second data","code":""},{"path":"/reference/bifun_clu_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"bifunctional clustering plot — bifun_clu_plot","text":"functional clustering plot","code":""},{"path":"/reference/biget_par_int.html","id":null,"dir":"Reference","previous_headings":"","what":"acquire initial parameters for functional clustering — biget_par_int","title":"acquire initial parameters for functional clustering — biget_par_int","text":"acquire initial parameters functional clustering","code":""},{"path":"/reference/biget_par_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"acquire initial parameters for functional clustering — biget_par_int","text":"","code":"biget_par_int(X, k, times1, times2, n1, n2)"},{"path":"/reference/biget_par_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"acquire initial parameters for functional clustering — biget_par_int","text":"X matrix cluster k vector cluster number times1 vector x values time points times2 vector x values time points n1 scalar number column contain first trait/location etc n2 scalar number column contain second trait/location etc","code":""},{"path":"/reference/biget_par_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"acquire initial parameters for functional clustering — biget_par_int","text":"initial parameters functional clustering","code":""},{"path":"/reference/bipower_equation_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"plot power equation fitting results for bi-variate model — bipower_equation_plot","title":"plot power equation fitting results for bi-variate model — bipower_equation_plot","text":"plot power equation fitting results bi-variate model","code":""},{"path":"/reference/bipower_equation_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot power equation fitting results for bi-variate model — bipower_equation_plot","text":"","code":"bipower_equation_plot(   result,   label = 10,   n = 9,   show.legend = FALSE,   color1 = \"#38E54D\",   color2 = \"#FF8787\" )"},{"path":"/reference/bipower_equation_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot power equation fitting results for bi-variate model — bipower_equation_plot","text":"result list object returned data_match label relabel x y label due log-transform, set 10 default n scales many subplots needed show.legend show legend color1 Hex Color Codes first data color2 Hex Color Codes second data","code":""},{"path":"/reference/bipower_equation_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot power equation fitting results for bi-variate model — bipower_equation_plot","text":"plot show power curve fitting result","code":""},{"path":"/reference/biqdODE_plot_all.html","id":null,"dir":"Reference","previous_headings":"","what":"plot all decompose plot for two data — biqdODE_plot_all","title":"plot all decompose plot for two data — biqdODE_plot_all","text":"plot decompose plot two data","code":""},{"path":"/reference/biqdODE_plot_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot all decompose plot for two data — biqdODE_plot_all","text":"","code":"biqdODE_plot_all(   result1,   result2,   label = 10,   show.legend = FALSE,   remove.label = TRUE,   nrow = NULL,   ncol = NULL )"},{"path":"/reference/biqdODE_plot_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot all decompose plot for two data — biqdODE_plot_all","text":"result1 list qdODE first data result2 list qdODE second data label relabel x y label due log-transform, set 10 default show.legend show legend remove.label remove x y label nrow scalar subplot row number ncol scalar subplot column number","code":""},{"path":"/reference/biqdODE_plot_base.html","id":null,"dir":"Reference","previous_headings":"","what":"plot single decompose plot for two data — biqdODE_plot_base","title":"plot single decompose plot for two data — biqdODE_plot_base","text":"plot single decompose plot two data","code":""},{"path":"/reference/biqdODE_plot_base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot single decompose plot for two data — biqdODE_plot_base","text":"","code":"biqdODE_plot_base(   result1,   result2,   label = 10,   show.legend = FALSE,   remove.label = FALSE )"},{"path":"/reference/biqdODE_plot_base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot single decompose plot for two data — biqdODE_plot_base","text":"result1 list qdODE first data result2 list qdODE second data label relabel x y label due log-transform, set 10 default show.legend show legend remove.label remove x y label","code":""},{"path":"/reference/darken.html","id":null,"dir":"Reference","previous_headings":"","what":"make color more dark — darken","title":"make color more dark — darken","text":"make color dark","code":""},{"path":"/reference/darken.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make color more dark — darken","text":"","code":"darken(color, factor = 1.2)"},{"path":"/reference/darken.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make color more dark — darken","text":"color hex color code factor scalar darken level","code":""},{"path":"/reference/darken.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"make color more dark — darken","text":"darkened hex color code","code":""},{"path":"/reference/darken.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"make color more dark — darken","text":"","code":"darken(\"#FF0000\") #> [1] \"#D40000\""},{"path":"/reference/data_cleaning.html","id":null,"dir":"Reference","previous_headings":"","what":"remove observation with too many 0 values — data_cleaning","title":"remove observation with too many 0 values — data_cleaning","text":"remove observation many 0 values","code":""},{"path":"/reference/data_cleaning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"remove observation with too many 0 values — data_cleaning","text":"","code":"data_cleaning(data, x = round(ncol(data) * 0.3))"},{"path":"/reference/data_cleaning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"remove observation with too many 0 values — data_cleaning","text":"data dataframe imported dataset, must first column ID x scales indicate many 0 remove","code":""},{"path":"/reference/data_cleaning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"remove observation with too many 0 values — data_cleaning","text":"dataframe without many 0 observations","code":""},{"path":"/reference/data_cleaning.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"remove observation with too many 0 values — data_cleaning","text":"","code":"data_cleaning(matrix(c(c(0,1,1,0,0,1,1), c(2,1,0,3,5,2,2), c(1,1,3,2,4,5,1)), 3, 7), 2) #>   V1 V2 V3 V4 V5 V6 #> 0  0  1  0  2  1  4 #> 1  1  3  8  3  5  6"},{"path":"/reference/data_match.html","id":null,"dir":"Reference","previous_headings":"","what":"match power_equation fit result for bi-variate model — data_match","title":"match power_equation fit result for bi-variate model — data_match","text":"match power_equation fit result bi-variate model","code":""},{"path":"/reference/data_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"match power_equation fit result for bi-variate model — data_match","text":"","code":"data_match(result1, result2)"},{"path":"/reference/data_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"match power_equation fit result for bi-variate model — data_match","text":"result1 list object power_equation fit result2 list object power_equation fit","code":""},{"path":"/reference/data_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"match power_equation fit result for bi-variate model — data_match","text":"id match list input dataset","code":""},{"path":"/reference/fun_clu.html","id":null,"dir":"Reference","previous_headings":"","what":"main function for functional clustering — fun_clu","title":"main function for functional clustering — fun_clu","text":"main function functional clustering","code":""},{"path":"/reference/fun_clu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"main function for functional clustering — fun_clu","text":"","code":"fun_clu(   data,   k,   Time = NULL,   trans = log10,   inv.cov = NULL,   initial.pars = NULL,   iter.max = 100,   parscale = 0.1 )"},{"path":"/reference/fun_clu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"main function for functional clustering — fun_clu","text":"data matrix data cluster k vector cluster number Time vector time point trans indicate log/log2/log10 transform dataset inv.cov matrix directly solve cov matrix, default given(currently available) initial.pars vector manual give initial parameters, default given iter.max scales control iteration EM algorithm parscale scales control parameters scales cov pars","code":""},{"path":"/reference/fun_clu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"main function for functional clustering — fun_clu","text":"initial parameters functional clustering","code":""},{"path":"/reference/fun_clu_BIC.html","id":null,"dir":"Reference","previous_headings":"","what":"plot BIC results for functional clustering — fun_clu_BIC","title":"plot BIC results for functional clustering — fun_clu_BIC","text":"plot BIC results functional clustering","code":""},{"path":"/reference/fun_clu_BIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot BIC results for functional clustering — fun_clu_BIC","text":"","code":"fun_clu_BIC(result, crit = \"BIC\", title = NULL)"},{"path":"/reference/fun_clu_BIC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot BIC results for functional clustering — fun_clu_BIC","text":"result list directly fun_clu_parallel function crit either BIC AIC module selection title title plot","code":""},{"path":"/reference/fun_clu_BIC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot BIC results for functional clustering — fun_clu_BIC","text":"BIC plot","code":""},{"path":"/reference/fun_clu_convert.html","id":null,"dir":"Reference","previous_headings":"","what":"convert result of functional clustering result — fun_clu_convert","title":"convert result of functional clustering result — fun_clu_convert","text":"convert result functional clustering result","code":""},{"path":"/reference/fun_clu_convert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert result of functional clustering result — fun_clu_convert","text":"","code":"fun_clu_convert(result, best.k)"},{"path":"/reference/fun_clu_convert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert result of functional clustering result — fun_clu_convert","text":"result list directly fun_clu_parallel function best.k scale BIC-determined cluster number","code":""},{"path":"/reference/fun_clu_convert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert result of functional clustering result — fun_clu_convert","text":"list contain module data fitted data","code":""},{"path":"/reference/fun_clu_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"parallel version for functional clustering — fun_clu_parallel","title":"parallel version for functional clustering — fun_clu_parallel","text":"parallel version functional clustering","code":""},{"path":"/reference/fun_clu_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parallel version for functional clustering — fun_clu_parallel","text":"","code":"fun_clu_parallel(   data,   Time = NULL,   trans = log10,   start,   end,   iter.max = 100,   thread = 2 )"},{"path":"/reference/fun_clu_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parallel version for functional clustering — fun_clu_parallel","text":"data data cluster Time vector time point trans indicate log/log2/log10 transform dataset start vector minimum cluster number end vector maximum cluster number iter.max scales control iteration EM algorithm thread scales many threads used","code":""},{"path":"/reference/fun_clu_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parallel version for functional clustering — fun_clu_parallel","text":"initial parameters functional clustering","code":""},{"path":"/reference/fun_clu_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"functional clustering plot — fun_clu_plot","title":"functional clustering plot — fun_clu_plot","text":"functional clustering plot","code":""},{"path":"/reference/fun_clu_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"functional clustering plot — fun_clu_plot","text":"","code":"fun_clu_plot(result, best.k, label = 10, degree = 1)"},{"path":"/reference/fun_clu_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"functional clustering plot — fun_clu_plot","text":"result list directly fun_clu_parallel function best.k scalar BIC-determined cluster number label relabel x y label due log-transform, set 10 default degree scalar control transparency degree","code":""},{"path":"/reference/fun_clu_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"functional clustering plot — fun_clu_plot","text":"functional clustering plot","code":""},{"path":"/reference/fun_clu_select.html","id":null,"dir":"Reference","previous_headings":"","what":"select result of functional clustering result — fun_clu_select","title":"select result of functional clustering result — fun_clu_select","text":"select result functional clustering result","code":""},{"path":"/reference/fun_clu_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"select result of functional clustering result — fun_clu_select","text":"","code":"fun_clu_select(result_fit, result_funclu, i)"},{"path":"/reference/fun_clu_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"select result of functional clustering result — fun_clu_select","text":"result_fit list directly power_equation_fit result_funclu list fun_clu_convert scale cluster selected","code":""},{"path":"/reference/fun_clu_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"select result of functional clustering result — fun_clu_select","text":"list contain microbe data fitted data","code":""},{"path":"/reference/get_SAD1_covmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"generate standard SAD1 covariance matrix — get_SAD1_covmatrix","title":"generate standard SAD1 covariance matrix — get_SAD1_covmatrix","text":"generate standard SAD1 covariance matrix","code":""},{"path":"/reference/get_SAD1_covmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate standard SAD1 covariance matrix — get_SAD1_covmatrix","text":"","code":"get_SAD1_covmatrix(par, n)"},{"path":"/reference/get_SAD1_covmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate standard SAD1 covariance matrix — get_SAD1_covmatrix","text":"par vector two number SAD1 covariance matrix n scalar indicate length time d","code":""},{"path":"/reference/get_SAD1_covmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate standard SAD1 covariance matrix — get_SAD1_covmatrix","text":"SAD1 covariance matrix","code":""},{"path":"/reference/get_SAD1_covmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generate standard SAD1 covariance matrix — get_SAD1_covmatrix","text":"","code":"get_SAD1_covmatrix(par = c(2,0.5), n = 14) #>          [,1]    [,2]     [,3]     [,4]     [,5]     [,6]      [,7]      [,8] #>  [1,]    0.25    0.50     1.00     2.00     4.00     8.00     16.00     32.00 #>  [2,]    0.50    1.25     2.50     5.00    10.00    20.00     40.00     80.00 #>  [3,]    1.00    2.50     5.25    10.50    21.00    42.00     84.00    168.00 #>  [4,]    2.00    5.00    10.50    21.25    42.50    85.00    170.00    340.00 #>  [5,]    4.00   10.00    21.00    42.50    85.25   170.50    341.00    682.00 #>  [6,]    8.00   20.00    42.00    85.00   170.50   341.25    682.50   1365.00 #>  [7,]   16.00   40.00    84.00   170.00   341.00   682.50   1365.25   2730.50 #>  [8,]   32.00   80.00   168.00   340.00   682.00  1365.00   2730.50   5461.25 #>  [9,]   64.00  160.00   336.00   680.00  1364.00  2730.00   5461.00  10922.50 #> [10,]  128.00  320.00   672.00  1360.00  2728.00  5460.00  10922.00  21845.00 #> [11,]  256.00  640.00  1344.00  2720.00  5456.00 10920.00  21844.00  43690.00 #> [12,]  512.00 1280.00  2688.00  5440.00 10912.00 21840.00  43688.00  87380.00 #> [13,] 1024.00 2560.00  5376.00 10880.00 21824.00 43680.00  87376.00 174760.00 #> [14,] 2048.00 5120.00 10752.00 21760.00 43648.00 87360.00 174752.00 349520.00 #>            [,9]      [,10]     [,11]     [,12]    [,13]    [,14] #>  [1,]     64.00     128.00     256.0     512.0     1024     2048 #>  [2,]    160.00     320.00     640.0    1280.0     2560     5120 #>  [3,]    336.00     672.00    1344.0    2688.0     5376    10752 #>  [4,]    680.00    1360.00    2720.0    5440.0    10880    21760 #>  [5,]   1364.00    2728.00    5456.0   10912.0    21824    43648 #>  [6,]   2730.00    5460.00   10920.0   21840.0    43680    87360 #>  [7,]   5461.00   10922.00   21844.0   43688.0    87376   174752 #>  [8,]  10922.50   21845.00   43690.0   87380.0   174760   349520 #>  [9,]  21845.25   43690.50   87381.0  174762.0   349524   699048 #> [10,]  43690.50   87381.25  174762.5  349525.0   699050  1398100 #> [11,]  87381.00  174762.50  349525.2  699050.5  1398101  2796202 #> [12,] 174762.00  349525.00  699050.5 1398101.2  2796202  5592405 #> [13,] 349524.00  699050.00 1398101.0 2796202.5  5592405 11184810 #> [14,] 699048.00 1398100.00 2796202.0 5592405.0 11184810 22369621"},{"path":"/reference/get_biSAD1.html","id":null,"dir":"Reference","previous_headings":"","what":"generate biSAD1 covariance matrix — get_biSAD1","title":"generate biSAD1 covariance matrix — get_biSAD1","text":"generate biSAD1 covariance matrix","code":""},{"path":"/reference/get_biSAD1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate biSAD1 covariance matrix — get_biSAD1","text":"","code":"get_biSAD1(par, n1, n2)"},{"path":"/reference/get_biSAD1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate biSAD1 covariance matrix — get_biSAD1","text":"par vector four number, first two ck rest stress n1 scalar indicate length time1 n2 scalar indicate length time2","code":""},{"path":"/reference/get_biSAD1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate biSAD1 covariance matrix — get_biSAD1","text":"biSAD1 covariance matrix","code":""},{"path":"/reference/get_biSAD1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generate biSAD1 covariance matrix — get_biSAD1","text":"","code":"get_biSAD1(par=c(2,0.5,2,0.1),n1=4, n2 = 5) #>       [,1] [,2]  [,3]  [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,] 0.25 0.50  1.00  2.00 0.00 0.00 0.00 0.00 0.00 #>  [2,] 0.50 1.25  2.50  5.00 0.00 0.00 0.00 0.00 0.00 #>  [3,] 1.00 2.50  5.25 10.50 0.00 0.00 0.00 0.00 0.00 #>  [4,] 2.00 5.00 10.50 21.25 0.00 0.00 0.00 0.00 0.00 #>  [5,] 0.00 0.00  0.00  0.00 0.01 0.02 0.04 0.08 0.16 #>  [6,] 0.00 0.00  0.00  0.00 0.02 0.05 0.10 0.20 0.40 #>  [7,] 0.00 0.00  0.00  0.00 0.04 0.10 0.21 0.42 0.84 #>  [8,] 0.00 0.00  0.00  0.00 0.08 0.20 0.42 0.85 1.70 #>  [9,] 0.00 0.00  0.00  0.00 0.16 0.40 0.84 1.70 3.41"},{"path":"/reference/get_interaction.html","id":null,"dir":"Reference","previous_headings":"","what":"Lasso-based variable selection — get_interaction","title":"Lasso-based variable selection — get_interaction","text":"Lasso-based variable selection","code":""},{"path":"/reference/get_interaction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lasso-based variable selection — get_interaction","text":"","code":"get_interaction(data, col, reduction = FALSE)"},{"path":"/reference/get_interaction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lasso-based variable selection — get_interaction","text":"data data clustered results, contain cluster column col scalar row number selected reduction use n/log(n) dimension reduction","code":""},{"path":"/reference/get_interaction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lasso-based variable selection — get_interaction","text":"list contain relationship row","code":""},{"path":"/reference/get_legendre_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"generate legendre matrix — get_legendre_matrix","title":"generate legendre matrix — get_legendre_matrix","text":"generate legendre matrix","code":""},{"path":"/reference/get_legendre_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate legendre matrix — get_legendre_matrix","text":"","code":"get_legendre_matrix(x, legendre_order)"},{"path":"/reference/get_legendre_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate legendre matrix — get_legendre_matrix","text":"x vector equal x value legendre polynomials(case times) legendre_order order legendre polynomials","code":""},{"path":"/reference/get_legendre_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate legendre matrix — get_legendre_matrix","text":"polynomials value order","code":""},{"path":"/reference/get_legendre_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generate legendre matrix — get_legendre_matrix","text":"","code":"get_legendre_matrix(1:14,4) #>        legendre_1  legendre_2 legendre_3  legendre_4 #>  [1,] -1.00000000  1.00000000 -1.0000000  1.00000000 #>  [2,] -0.84615385  0.57396450 -0.2453345 -0.06718952 #>  [3,] -0.69230769  0.21893491  0.2089213 -0.41731732 #>  [4,] -0.53846154 -0.06508876  0.4173873 -0.34449074 #>  [5,] -0.38461538 -0.27810651  0.4346837 -0.08399566 #>  [6,] -0.23076923 -0.42011834  0.3154301  0.18770351 #>  [7,] -0.07692308 -0.49112426  0.1142467  0.35296383 #>  [8,]  0.07692308 -0.49112426 -0.1142467  0.35296383 #>  [9,]  0.23076923 -0.42011834 -0.3154301  0.18770351 #> [10,]  0.38461538 -0.27810651 -0.4346837 -0.08399566 #> [11,]  0.53846154 -0.06508876 -0.4173873 -0.34449074 #> [12,]  0.69230769  0.21893491 -0.2089213 -0.41731732 #> [13,]  0.84615385  0.57396450  0.2453345 -0.06718952 #> [14,]  1.00000000  1.00000000  1.0000000  1.00000000"},{"path":"/reference/get_legendre_par.html","id":null,"dir":"Reference","previous_headings":"","what":"use legendre polynomials to fit a given data — get_legendre_par","title":"use legendre polynomials to fit a given data — get_legendre_par","text":"use legendre polynomials fit given data","code":""},{"path":"/reference/get_legendre_par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"use legendre polynomials to fit a given data — get_legendre_par","text":"","code":"get_legendre_par(y, legendre_order, x)"},{"path":"/reference/get_legendre_par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"use legendre polynomials to fit a given data — get_legendre_par","text":"y vector equal y observed data(case generic effect) legendre_order scalar legendre polynomials x vector equal x value legendre polynomials(case times)","code":""},{"path":"/reference/get_legendre_par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"use legendre polynomials to fit a given data — get_legendre_par","text":"polynomials coefficients","code":""},{"path":"/reference/get_legendre_par.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"use legendre polynomials to fit a given data — get_legendre_par","text":"","code":"get_legendre_par(14:1,4,1:14) #> [1]  7.500000e+00 -6.500000e+00  1.101399e-15 -2.431504e-15  2.262431e-15"},{"path":"/reference/get_mu.html","id":null,"dir":"Reference","previous_headings":"","what":"curve fit with modified logistic function — get_mu","title":"curve fit with modified logistic function — get_mu","text":"curve fit modified logistic function","code":""},{"path":"/reference/get_mu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"curve fit with modified logistic function — get_mu","text":"","code":"get_mu(mu_par, times)"},{"path":"/reference/get_mu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"curve fit with modified logistic function — get_mu","text":"mu_par vector five number times vector time point","code":""},{"path":"/reference/get_mu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"curve fit with modified logistic function — get_mu","text":"numeric vector length times","code":""},{"path":"/reference/get_mu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"curve fit with modified logistic function — get_mu","text":"","code":"get_mu(mu_par = 1:5, times = 1:14) #>  [1] 0.8824912 0.9948854 0.9997520 0.9999877 0.9999994 1.0000000 1.0000000 #>  [8] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000"},{"path":"/reference/get_mu2.html","id":null,"dir":"Reference","previous_headings":"","what":"generate mean vectors with ck and stress condition — get_mu2","title":"generate mean vectors with ck and stress condition — get_mu2","text":"generate mean vectors ck stress condition","code":""},{"path":"/reference/get_mu2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate mean vectors with ck and stress condition — get_mu2","text":"","code":"get_mu2(par, times)"},{"path":"/reference/get_mu2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate mean vectors with ck and stress condition — get_mu2","text":"par vector ten number, first five ck rest stress times vector time point","code":""},{"path":"/reference/get_mu2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate mean vectors with ck and stress condition — get_mu2","text":"numeric vector double length times","code":""},{"path":"/reference/get_mu2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generate mean vectors with ck and stress condition — get_mu2","text":"","code":"get_mu2(par = 1:10, times = 1:14) #>  [1] 0.8824912 0.9948854 0.9997520 0.9999877 0.9999994 1.0000000 1.0000000 #>  [8] 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 1.0000000 #> [15] 5.9855350 5.9999953 6.0000000 6.0000000 6.0000000 6.0000000 6.0000000 #> [22] 6.0000000 6.0000000 6.0000000 6.0000000 6.0000000 6.0000000 6.0000000"},{"path":"/reference/get_par_int.html","id":null,"dir":"Reference","previous_headings":"","what":"acquire initial parameters for functional clustering — get_par_int","title":"acquire initial parameters for functional clustering — get_par_int","text":"acquire initial parameters functional clustering","code":""},{"path":"/reference/get_par_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"acquire initial parameters for functional clustering — get_par_int","text":"","code":"get_par_int(X, k, times)"},{"path":"/reference/get_par_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"acquire initial parameters for functional clustering — get_par_int","text":"X matrix cluster k vector cluster number times vector x values time points","code":""},{"path":"/reference/get_par_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"acquire initial parameters for functional clustering — get_par_int","text":"initial parameters functional clustering","code":""},{"path":"/reference/gut_microbe.html","id":null,"dir":"Reference","previous_headings":"","what":"gut microbe OTU data (species level) — gut_microbe","title":"gut microbe OTU data (species level) — gut_microbe","text":"original nucleotide sequences study deposited NCBI Sequence Read Archive accession number SRP128619.","code":""},{"path":"/reference/gut_microbe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gut microbe OTU data (species level) — gut_microbe","text":"","code":"data(gut_microbe)"},{"path":"/reference/gut_microbe.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gut microbe OTU data (species level) — gut_microbe","text":"data frame 65 rows 21 column, contain first column microbe ID:","code":""},{"path":"/reference/legendre_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"generate curve based on legendre polynomials — legendre_fit","title":"generate curve based on legendre polynomials — legendre_fit","text":"generate curve based legendre polynomials","code":""},{"path":"/reference/legendre_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate curve based on legendre polynomials — legendre_fit","text":"","code":"legendre_fit(par, x)"},{"path":"/reference/legendre_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate curve based on legendre polynomials — legendre_fit","text":"par vector legendre polynomials coefficients x vector equal x value legendre polynomials(case times)","code":""},{"path":"/reference/legendre_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate curve based on legendre polynomials — legendre_fit","text":"polynomials value","code":""},{"path":"/reference/legendre_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generate curve based on legendre polynomials — legendre_fit","text":"","code":"legendre_fit(rep(1,5),1:14) #>  [1] 1.0000000 0.4152866 0.3182312 0.4693463 0.6879661 0.8522461 0.8991632 #>  [8] 0.8245159 0.6829243 0.5878296 0.7114947 1.2850040 2.5982634 5.0000000"},{"path":"/reference/logsumexp.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate log-sum-exp values — logsumexp","title":"calculate log-sum-exp values — logsumexp","text":"calculate log-sum-exp values","code":""},{"path":"/reference/logsumexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate log-sum-exp values — logsumexp","text":"","code":"logsumexp(v)"},{"path":"/reference/logsumexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate log-sum-exp values — logsumexp","text":"v numeric vector","code":""},{"path":"/reference/logsumexp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate log-sum-exp values — logsumexp","text":"log-sum-exp values","code":""},{"path":"/reference/logsumexp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"calculate log-sum-exp values — logsumexp","text":"","code":"logsumexp(c(100, 1000, 10000)) #> [1] 10000"},{"path":"/reference/mustard_microbe.html","id":null,"dir":"Reference","previous_headings":"","what":"mustard microbe OTU data — mustard_microbe","title":"mustard microbe OTU data — mustard_microbe","text":"Wagner, M. R. et al. Host genotype age shape leaf root microbiomes wild perennial plant. Nat. Commun. 7:12151 doi: 10.1038/ncomms12151 (2016) dataset subset otuTable97, select location = JAM, keep samples root leaf data, run data_cleaning first (set x = 50) reduce size data. Moreover, sample 8_1382 removed outlier reason.","code":""},{"path":"/reference/mustard_microbe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mustard microbe OTU data — mustard_microbe","text":"","code":"data(mustard_microbe)"},{"path":"/reference/mustard_microbe.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"mustard microbe OTU data — mustard_microbe","text":"data frame 1557 rows 176 column, contain first column OTU ID:","code":""},{"path":"/reference/network_conversion.html","id":null,"dir":"Reference","previous_headings":"","what":"convert ODE results(ODE_solving2) to basic network plot table — network_conversion","title":"convert ODE results(ODE_solving2) to basic network plot table — network_conversion","text":"convert ODE results(ODE_solving2) basic network plot table","code":""},{"path":"/reference/network_conversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert ODE results(ODE_solving2) to basic network plot table — network_conversion","text":"","code":"network_conversion(result)"},{"path":"/reference/network_conversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert ODE results(ODE_solving2) to basic network plot table — network_conversion","text":"result list result qsODE_parallel","code":""},{"path":"/reference/network_conversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert ODE results(ODE_solving2) to basic network plot table — network_conversion","text":"list basic information plot network","code":""},{"path":"/reference/network_maxeffect.html","id":null,"dir":"Reference","previous_headings":"","what":"convert ODE results(ODE_solving2) to basic network plot table — network_maxeffect","title":"convert ODE results(ODE_solving2) to basic network plot table — network_maxeffect","text":"convert ODE results(ODE_solving2) basic network plot table","code":""},{"path":"/reference/network_maxeffect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert ODE results(ODE_solving2) to basic network plot table — network_maxeffect","text":"","code":"network_maxeffect(result)"},{"path":"/reference/network_maxeffect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert ODE results(ODE_solving2) to basic network plot table — network_maxeffect","text":"result list result qsODE_parallel","code":""},{"path":"/reference/network_maxeffect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert ODE results(ODE_solving2) to basic network plot table — network_maxeffect","text":"list basic information plot network","code":""},{"path":"/reference/network_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"generate network plot — network_plot","title":"generate network plot — network_plot","text":"generate network plot","code":""},{"path":"/reference/network_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate network plot — network_plot","text":"","code":"network_plot(result, title = NULL, maxeffect = NULL, type = NULL)"},{"path":"/reference/network_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate network plot — network_plot","text":"result list result network_conversion title text plot title maxeffect control edge size compare networks type select module effect microbe effect","code":""},{"path":"/reference/network_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate network plot — network_plot","text":"network plot","code":""},{"path":"/reference/normalization.html","id":null,"dir":"Reference","previous_headings":"","what":"min-max normalization — normalization","title":"min-max normalization — normalization","text":"min-max normalization","code":""},{"path":"/reference/normalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"min-max normalization — normalization","text":"","code":"normalization(x, z = 0.2)"},{"path":"/reference/normalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"min-max normalization — normalization","text":"x numeric vector z scalar add minimum value avoid 0","code":""},{"path":"/reference/normalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"min-max normalization — normalization","text":"normalized vector","code":""},{"path":"/reference/normalization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"min-max normalization — normalization","text":"","code":"normalization(runif(100,min = -100, max = 100)) #>   [1] 0.6356808 0.2746821 1.1645029 0.7364645 1.0435525 1.1047125 1.0572523 #>   [8] 0.9510173 0.2688871 0.8630330 0.2000000 1.0288534 0.4734507 0.2338975 #>  [15] 1.1188266 0.7446844 0.8837038 0.3770692 0.7661596 0.3833575 1.0246352 #>  [22] 1.0377021 0.7052357 1.1973209 0.5435634 0.6548367 1.0682962 0.3450311 #>  [29] 0.4699458 0.6353543 0.5663773 0.7025899 0.2477763 1.2000000 1.1544633 #>  [36] 0.4369299 0.3092371 0.2861391 1.1755645 1.1237178 0.5836080 0.5535394 #>  [43] 0.6151213 0.8907511 0.8462842 0.7642252 0.9021730 0.6796724 0.9695114 #>  [50] 0.7748442 1.1769726 0.7141303 0.4098960 1.1107290 0.8331241 0.2469039 #>  [57] 0.2466221 0.8268214 0.6961542 0.8417122 0.7091734 0.7556101 0.4900692 #>  [64] 0.8490456 0.8037341 0.4097176 0.3091402 0.7901114 0.8747484 0.6208499 #>  [71] 1.1255611 0.7640073 0.8943431 0.2373456 0.7811730 0.9285995 1.0081371 #>  [78] 0.8661011 0.2556796 0.8006038 0.3457432 0.6767077 0.7347640 0.8872909 #>  [85] 0.7387071 0.2140297 0.5914572 0.5528925 0.9242247 0.8660430 0.8655467 #>  [92] 0.8202865 0.8052809 0.5117076 1.1228117 0.4160374 0.8173515 0.2986884 #>  [99] 1.1001981 0.3715910"},{"path":"/reference/power_equation.html","id":null,"dir":"Reference","previous_headings":"","what":"use power equation parameters to generate y values — power_equation","title":"use power equation parameters to generate y values — power_equation","text":"use power equation parameters generate y values","code":""},{"path":"/reference/power_equation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"use power equation parameters to generate y values — power_equation","text":"","code":"power_equation(x, power_par)"},{"path":"/reference/power_equation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"use power equation parameters to generate y values — power_equation","text":"x vector x values power_par matrix contain parameters power equation","code":""},{"path":"/reference/power_equation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"use power equation parameters to generate y values — power_equation","text":"y values given power equation parameters","code":""},{"path":"/reference/power_equation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"use power equation parameters to generate y values — power_equation","text":"","code":"power_equation(c(1,2,3,5,7), matrix(c(2,1,1,2),2,2)) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    2    4    6   10   14 #> [2,]    1    4    9   25   49"},{"path":"/reference/power_equation_all.html","id":null,"dir":"Reference","previous_headings":"","what":"use power equation to fit observed values — power_equation_all","title":"use power equation to fit observed values — power_equation_all","text":"use power equation fit observed values","code":""},{"path":"/reference/power_equation_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"use power equation to fit observed values — power_equation_all","text":"","code":"power_equation_all(x, y, maxit = 100)"},{"path":"/reference/power_equation_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"use power equation to fit observed values — power_equation_all","text":"x vector x values y vector y values maxit numeric value maximum initial pars try","code":""},{"path":"/reference/power_equation_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"use power equation to fit observed values — power_equation_all","text":"nls model","code":""},{"path":"/reference/power_equation_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"use power equation to fit observed values — power_equation_all","text":"","code":"power_equation_all(c(1,2,3,5,7), c(5,10,15,17,20)) #> Nonlinear regression model #>   model: y ~ a * x^b #>    data: parent.frame() #>      a      b  #> 6.7601 0.5757  #>  residual sum-of-squares: 8.813 #>  #> Number of iterations to convergence: 5  #> Achieved convergence tolerance: 7.047e-06"},{"path":"/reference/power_equation_base.html","id":null,"dir":"Reference","previous_headings":"","what":"use power equation to fit observed values — power_equation_base","title":"use power equation to fit observed values — power_equation_base","text":"use power equation fit observed values","code":""},{"path":"/reference/power_equation_base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"use power equation to fit observed values — power_equation_base","text":"","code":"power_equation_base(x, y)"},{"path":"/reference/power_equation_base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"use power equation to fit observed values — power_equation_base","text":"x vector x values y vector y valyes","code":""},{"path":"/reference/power_equation_base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"use power equation to fit observed values — power_equation_base","text":"nls model","code":""},{"path":"/reference/power_equation_base.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"use power equation to fit observed values — power_equation_base","text":"","code":"power_equation_base(c(1,2,3,5,7), c(5,10,15,17,20)) #> Nonlinear regression model #>   model: y ~ a * x^b #>    data: parent.frame() #>      a      b  #> 6.7601 0.5757  #>  residual sum-of-squares: 8.813 #>  #> Number of iterations to convergence: 5  #> Achieved convergence tolerance: 9.658e-07"},{"path":"/reference/power_equation_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"use power equation to fit given dataset — power_equation_fit","title":"use power equation to fit given dataset — power_equation_fit","text":"use power equation fit given dataset","code":""},{"path":"/reference/power_equation_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"use power equation to fit given dataset — power_equation_fit","text":"","code":"power_equation_fit(data, n = 30, trans = log10, thread = 2)"},{"path":"/reference/power_equation_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"use power equation to fit given dataset — power_equation_fit","text":"data cleaned dataframe n scales many interpolation needed trans indicate log/log2/log10 transform dataset thread scales many thread used","code":""},{"path":"/reference/power_equation_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"use power equation to fit given dataset — power_equation_fit","text":"list contain power equation parameters fitted data","code":""},{"path":"/reference/power_equation_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"plot power equation fitting results — power_equation_plot","title":"plot power equation fitting results — power_equation_plot","text":"plot power equation fitting results","code":""},{"path":"/reference/power_equation_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot power equation fitting results — power_equation_plot","text":"","code":"power_equation_plot(result, label = 10, n = 9)"},{"path":"/reference/power_equation_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot power equation fitting results — power_equation_plot","text":"result list object returned power_equation_fit label relabel x y label due log-transform, set 10 default n scales many subplots needed","code":""},{"path":"/reference/power_equation_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot power equation fitting results — power_equation_plot","text":"plot show power curve fitting result","code":""},{"path":"/reference/qdODE_all.html","id":null,"dir":"Reference","previous_headings":"","what":"wrapper for qdODE model — qdODE_all","title":"wrapper for qdODE model — qdODE_all","text":"wrapper qdODE model","code":""},{"path":"/reference/qdODE_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wrapper for qdODE model — qdODE_all","text":"","code":"qdODE_all(   result,   relationship,   i,   init_pars = 1,   LOP_order = 6,   method = \"ls\",   new_time = NULL,   n_expand = 100,   maxit = 1000 )"},{"path":"/reference/qdODE_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wrapper for qdODE model — qdODE_all","text":"result result power_equation_fit relationship list contain variable selection results scalar id used qdODE solving, must <= nrow init_pars scalar initial parameters LOP_order scalar LOP order method scalar qdODE solving methodm, cuurent support least square new_time vector produce new defined time point n_expand scalar many interpolation needed maxit scalar Optim iteration setting","code":""},{"path":"/reference/qdODE_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"wrapper for qdODE model — qdODE_all","text":"list contain variable selection results LOP parameters every row","code":""},{"path":"/reference/qdODE_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"legendre polynomials fit to qdODE model — qdODE_fit","title":"legendre polynomials fit to qdODE model — qdODE_fit","text":"legendre polynomials fit qdODE model","code":""},{"path":"/reference/qdODE_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"legendre polynomials fit to qdODE model — qdODE_fit","text":"","code":"qdODE_fit(   pars,   data,   Time,   power_par,   LOP_order = 6,   new_time = NULL,   n_expand = 100 )"},{"path":"/reference/qdODE_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"legendre polynomials fit to qdODE model — qdODE_fit","text":"pars vector qdODE parameters data dataframe observed data Time vector time point power_par matrix power equation parameters dependent effect LOP_order scalar LOP order new_time vector produce new defined time point n_expand scalar many interpolation needed","code":""},{"path":"/reference/qdODE_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"legendre polynomials fit to qdODE model — qdODE_fit","text":"list contain legendre polynomials parameters, qdODE values LOP fitted values","code":""},{"path":"/reference/qdODE_ls.html","id":null,"dir":"Reference","previous_headings":"","what":"least-square fit for qdODE model — qdODE_ls","title":"least-square fit for qdODE model — qdODE_ls","text":"least-square fit qdODE model","code":""},{"path":"/reference/qdODE_ls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"least-square fit for qdODE model — qdODE_ls","text":"","code":"qdODE_ls(pars, data, Time, power_par)"},{"path":"/reference/qdODE_ls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"least-square fit for qdODE model — qdODE_ls","text":"pars vector unknown ODE parameters data data contain independent effect first row dependent effect Time vector time point power_par matrix power equation parameters dependent effect","code":""},{"path":"/reference/qdODE_ls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"least-square fit for qdODE model — qdODE_ls","text":"mean-square error","code":""},{"path":"/reference/qdODE_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"wrapper for qdODE_all in parallel version — qdODE_parallel","title":"wrapper for qdODE_all in parallel version — qdODE_parallel","text":"wrapper qdODE_all parallel version","code":""},{"path":"/reference/qdODE_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wrapper for qdODE_all in parallel version — qdODE_parallel","text":"","code":"qdODE_parallel(result, reduction = FALSE, thread = 2, maxit = 1000)"},{"path":"/reference/qdODE_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wrapper for qdODE_all in parallel version — qdODE_parallel","text":"result result power_equation_fit reduction use n/log(n) dimension reduction thread scales many threads used maxit scalar Optim iteration setting","code":""},{"path":"/reference/qdODE_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"wrapper for qdODE_all in parallel version — qdODE_parallel","text":"list contain variable selection results LOP parameters every row","code":""},{"path":"/reference/qdODE_plot_all.html","id":null,"dir":"Reference","previous_headings":"","what":"plot all decompose plot — qdODE_plot_all","title":"plot all decompose plot — qdODE_plot_all","text":"plot decompose plot","code":""},{"path":"/reference/qdODE_plot_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot all decompose plot — qdODE_plot_all","text":"","code":"qdODE_plot_all(   result,   label = 10,   show.legend = TRUE,   nrow = NULL,   ncol = NULL )"},{"path":"/reference/qdODE_plot_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot all decompose plot — qdODE_plot_all","text":"result list qdODE parallel label relabel x y label due log-transform, set 10 default show.legend show legend nrow scalar subplot row number ncol scalar subplot column number","code":""},{"path":"/reference/qdODE_plot_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot all decompose plot — qdODE_plot_all","text":"effect curve decompose plot","code":""},{"path":"/reference/qdODE_plot_base.html","id":null,"dir":"Reference","previous_headings":"","what":"plot single decompose plot — qdODE_plot_base","title":"plot single decompose plot — qdODE_plot_base","text":"plot single decompose plot","code":""},{"path":"/reference/qdODE_plot_base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot single decompose plot — qdODE_plot_base","text":"","code":"qdODE_plot_base(result, label = 10, show.legend = TRUE)"},{"path":"/reference/qdODE_plot_base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot single decompose plot — qdODE_plot_base","text":"result list qdODE label relabel x y label due log-transform, set 10 default show.legend show legend","code":""},{"path":"/reference/qdODEmod.html","id":null,"dir":"Reference","previous_headings":"","what":"quasi-dynamic lotka volterra model — qdODEmod","title":"quasi-dynamic lotka volterra model — qdODEmod","text":"quasi-dynamic lotka volterra model","code":""},{"path":"/reference/qdODEmod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"quasi-dynamic lotka volterra model — qdODEmod","text":"","code":"qdODEmod(Time, State, Pars, power_par)"},{"path":"/reference/qdODEmod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"quasi-dynamic lotka volterra model — qdODEmod","text":"Time vector time point State vector ODE initial state Pars vector unknown ODE parameters power_par matrix power equation parameters dependent effect","code":""},{"path":"/reference/qdODEmod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"quasi-dynamic lotka volterra model — qdODEmod","text":"list used ode function","code":""},{"path":"/reference/qdODEplot_convert.html","id":null,"dir":"Reference","previous_headings":"","what":"convert qdODE results to plot data — qdODEplot_convert","title":"convert qdODE results to plot data — qdODEplot_convert","text":"convert qdODE results plot data","code":""},{"path":"/reference/qdODEplot_convert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert qdODE results to plot data — qdODEplot_convert","text":"","code":"qdODEplot_convert(result)"},{"path":"/reference/qdODEplot_convert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert qdODE results to plot data — qdODEplot_convert","text":"result list qdODE ","code":""}]
